import unittest
from infrastructure.files.FormatExcelData2024 import FormatExcelData2024

class FromExcelData2022Test(unittest.TestCase):
    def test_clean_str_simple_line_excel(self):
        str_excel = "['33' 'Gironde' 3310 '10ème circonscription' 83620 58727 '70,23%' 24893 '29,77%' 55515 '66,39%' '94,53%' 2365 '2,83%' '4,03%' 847 '1,01%' '1,44%']"

        excel_format = FormatExcelData2024()
        
        datas = excel_format.format(str_excel)

        self.assertEqual(18, len(datas))
        self.assertEqual('33', datas[0])
        self.assertEqual('Gironde', datas[1])
        self.assertEqual('3310', datas[2])
        self.assertEqual('10ème circonscription', datas[3])
        self.assertEqual('83620', datas[4])
        self.assertEqual('58727', datas[5])
        self.assertEqual('70.23%', datas[6])
        self.assertEqual('24893', datas[7])
        self.assertEqual('29.77%', datas[8])
        self.assertEqual('55515', datas[9])
        self.assertEqual('66.39%', datas[10])
        self.assertEqual('94.53%', datas[11])
        self.assertEqual('2365', datas[12])
        self.assertEqual('2.83%', datas[13])
        self.assertEqual('4.03%', datas[14])
        self.assertEqual('847', datas[15])
        self.assertEqual('1.01%', datas[16])
        self.assertEqual('1.44%', datas[17])


    def test_clean_str_simple_line_excel_with_nan(self):
        str_excel = "['33' 'Gironde' 3310 '10ème circonscription' 83620 58727 '70,23%' 24893 '29,77%' 55515 '66,39%' '94,53%' 2365 '2,83%' '4,03%' 847 '1,01%' '1,44%' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan']"

        excel_format = FormatExcelData2024()
        
        datas = excel_format.format(str_excel)

        self.assertEqual(18, len(datas))
        self.assertEqual('33', datas[0])
        self.assertEqual('Gironde', datas[1])
        self.assertEqual('3310', datas[2])
        self.assertEqual('10ème circonscription', datas[3])
        self.assertEqual('83620', datas[4])
        self.assertEqual('58727', datas[5])
        self.assertEqual('70.23%', datas[6])
        self.assertEqual('24893', datas[7])
        self.assertEqual('29.77%', datas[8])
        self.assertEqual('55515', datas[9])
        self.assertEqual('66.39%', datas[10])
        self.assertEqual('94.53%', datas[11])
        self.assertEqual('2365', datas[12])
        self.assertEqual('2.83%', datas[13])
        self.assertEqual('4.03%', datas[14])
        self.assertEqual('847', datas[15])
        self.assertEqual('1.01%', datas[16])
        self.assertEqual('1.44%', datas[17])

    def test_clean_str_complexe_line_cote_d_or_department(self):
        str_excel = "['21' 'Côte-d'Or' 2101 '1ère circonscription' 70511 51765 '73,41%' 18746 '26,59%' 50386 '71,46%' '97,34%' 1081 '1,53%' '2,09%' 298 '0,42%' '0,58%' 1 'UG' 'GODARD' 'Océane' 'FEMININ' 18716 '26,54%' '37,15%' 'élu' '4.0' 'ENS' 'MARTIN' 'Didier' 'MASCULIN' '17314.0' '24,56%' '34,36%' 'nan' '5.0' 'RN' 'HUMBLOT-CORNILLE' 'Cyline' 'FEMININ' '14356.0' '20,36%' '28,49%' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan']"

        excel_format = FormatExcelData2024()
        
        datas = excel_format.format(str_excel)

        self.assertEqual(43, len(datas))
        self.assertEqual('21', datas[0])
        self.assertEqual('Côte-d\'Or', datas[1])
        self.assertEqual('2101', datas[2])
        self.assertEqual('1ère circonscription', datas[3])
        self.assertEqual('70511', datas[4])
        self.assertEqual('51765', datas[5])
        self.assertEqual('73.41%', datas[6])
        self.assertEqual('18746', datas[7])
        self.assertEqual('26.59%', datas[8])
        self.assertEqual('50386', datas[9])
        self.assertEqual('71.46%', datas[10])
        self.assertEqual('97.34%', datas[11])
        self.assertEqual('1081', datas[12])
        self.assertEqual('1.53%', datas[13])
        self.assertEqual('2.09%', datas[14])
        self.assertEqual('298', datas[15])
        self.assertEqual('0.42%', datas[16])
        self.assertEqual('0.58%', datas[17])        
        self.assertEqual('1', datas[18])
        self.assertEqual('UG', datas[19])
        self.assertEqual('GODARD', datas[20])
        self.assertEqual('Océane', datas[21])
        self.assertEqual('FEMININ', datas[22])
        self.assertEqual('18716', datas[23])
        self.assertEqual('26.54%', datas[24])
        self.assertEqual('37.15%', datas[25])
        self.assertEqual('élu', datas[26])
        self.assertEqual('4.0', datas[27])
        self.assertEqual('ENS', datas[28])
        self.assertEqual('MARTIN', datas[29])
        self.assertEqual('Didier', datas[30])
        self.assertEqual('MASCULIN', datas[31])
        self.assertEqual('17314.0', datas[32])
        self.assertEqual('24.56%', datas[33])
        self.assertEqual('34.36%', datas[34])
        self.assertEqual('5.0', datas[35])
        self.assertEqual('RN', datas[36])        
        self.assertEqual('HUMBLOT-CORNILLE', datas[37])
        self.assertEqual('Cyline', datas[38])
        self.assertEqual('FEMININ', datas[39])
        self.assertEqual('14356.0', datas[40])
        self.assertEqual('20.36%', datas[41])
        self.assertEqual('28.49%', datas[42])


    def test_clean_str_complexe_line_cote_d_armor_department(self):
        str_excel = "['22' 'Côtes-d'Armor' 2201 '1ère circonscription' 90642 67511 '74,48%' 23131 '25,52%' 65591 '72,36%' '97,16%' 1404 '1,55%' '2,08%' 516 '0,57%' '0,76%' 1 'ENS' 'COSSON' 'Mickaël' 'MASCULIN' 27186 '29,99%' '41,45%' 'élu' '2.0' 'UG' 'GORGIARD' 'Marion' 'FEMININ' '20845.0' '23,00%' '31,78%' 'nan' '4.0' 'RN' 'BILLAUD' 'Françoise' 'FEMININ' '17560.0' '19,37%' '26,77%' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan']"

        excel_format = FormatExcelData2024()
        
        datas = excel_format.format(str_excel)

        self.assertEqual(43, len(datas))
        self.assertEqual('22', datas[0])
        self.assertEqual('Côtes-d\'Armor', datas[1])
        self.assertEqual('2201', datas[2])
        self.assertEqual('1ère circonscription', datas[3])
        self.assertEqual('90642', datas[4])
        self.assertEqual('67511', datas[5])
        self.assertEqual('74.48%', datas[6])
        self.assertEqual('23131', datas[7])
        self.assertEqual('25.52%', datas[8])
        self.assertEqual('65591', datas[9])
        self.assertEqual('72.36%', datas[10])
        self.assertEqual('97.16%', datas[11])
        self.assertEqual('1404', datas[12])
        self.assertEqual('1.55%', datas[13])
        self.assertEqual('2.08%', datas[14])
        self.assertEqual('516', datas[15])
        self.assertEqual('0.57%', datas[16])
        self.assertEqual('0.76%', datas[17])        
        self.assertEqual('1', datas[18])
        self.assertEqual('ENS', datas[19])
        self.assertEqual('COSSON', datas[20])
        self.assertEqual('Mickaël', datas[21])
        self.assertEqual('MASCULIN', datas[22])
        self.assertEqual('27186', datas[23])
        self.assertEqual('29.99%', datas[24])
        self.assertEqual('41.45%', datas[25])
        self.assertEqual('élu', datas[26])
        self.assertEqual('2.0', datas[27])
        self.assertEqual('UG', datas[28])
        self.assertEqual('GORGIARD', datas[29])
        self.assertEqual('Marion', datas[30])
        self.assertEqual('FEMININ', datas[31])
        self.assertEqual('20845.0', datas[32])
        self.assertEqual('23.00%', datas[33])
        self.assertEqual('31.78%', datas[34])
        self.assertEqual('4.0', datas[35])
        self.assertEqual('RN', datas[36])        
        self.assertEqual('BILLAUD', datas[37])
        self.assertEqual('Françoise', datas[38])
        self.assertEqual('FEMININ', datas[39])
        self.assertEqual('17560.0', datas[40])
        self.assertEqual('19.37%', datas[41])
        self.assertEqual('26.77%', datas[42])

    def test_clean_str_complexe_line_val_d_oise_department_and_complexe_name_candidate(self):
        str_excel = "['95' 'Val-d'Oise' 9501 '1ère circonscription' 84034 57719 '68,69%' 26315 '31,31%' 56053 '66,70%' '97,11%' 1326 '1,58%' '2,30%' 340 '0,40%' '0,59%' 2 'UG' 'MOREL A L\'HUISSIER' 'Maximillien' 'MASCULIN' 20534 '24,44%' '36,63%' 'nan' '6.0' 'RN' 'PRUD\'HOMME' 'Anne' 'FEMININ' '21025.0' '25,02%' '37,51%' 'élu' '8.0' 'ENS' 'D\'ORSANNE' 'Émilie' 'FEMININ' '14494.0' '17,25%' '25,86%' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan']"

        excel_format = FormatExcelData2024()
        
        datas = excel_format.format(str_excel)

        self.assertEqual(43, len(datas))
        self.assertEqual('95', datas[0])
        self.assertEqual('Val-d\'Oise', datas[1])
        self.assertEqual('9501', datas[2])
        self.assertEqual('1ère circonscription', datas[3])
        self.assertEqual('84034', datas[4])
        self.assertEqual('57719', datas[5])
        self.assertEqual('68.69%', datas[6])
        self.assertEqual('26315', datas[7])
        self.assertEqual('31.31%', datas[8])
        self.assertEqual('56053', datas[9])
        self.assertEqual('66.70%', datas[10])
        self.assertEqual('97.11%', datas[11])
        self.assertEqual('1326', datas[12])
        self.assertEqual('1.58%', datas[13])
        self.assertEqual('2.30%', datas[14])
        self.assertEqual('340', datas[15])
        self.assertEqual('0.40%', datas[16])
        self.assertEqual('0.59%', datas[17])        
        self.assertEqual('2', datas[18])
        self.assertEqual('UG', datas[19])
        self.assertEqual('MOREL A L\'HUISSIER', datas[20])
        self.assertEqual('Maximillien', datas[21])
        self.assertEqual('MASCULIN', datas[22])
        self.assertEqual('20534', datas[23])
        self.assertEqual('24.44%', datas[24])
        self.assertEqual('36.63%', datas[25])
        self.assertEqual('6.0', datas[26])
        self.assertEqual('RN', datas[27])
        self.assertEqual('PRUD\'HOMME', datas[28])
        self.assertEqual('Anne', datas[29])
        self.assertEqual('FEMININ', datas[30])
        self.assertEqual('21025.0', datas[31])
        self.assertEqual('25.02%', datas[32])
        self.assertEqual('37.51%', datas[33])        
        self.assertEqual('élu', datas[34])
        self.assertEqual('8.0', datas[35])
        self.assertEqual('ENS', datas[36])        
        self.assertEqual('D\'ORSANNE', datas[37])
        self.assertEqual('Émilie', datas[38])
        self.assertEqual('FEMININ', datas[39])
        self.assertEqual('14494.0', datas[40])
        self.assertEqual('17.25%', datas[41])
        self.assertEqual('25.86%', datas[42])

