import unittest
from infrastructure.files.FormatExcelData2022 import FormatExcelData2022

class FromExcelData2022Test(unittest.TestCase):
    def test_separate_gironde_districts_2022_elections(self):
        excel_line = "['33' 'Gironde' 10 '10ème circonscription' 'Complet' 83277 40667 '48.83' 42610 '51.17' 781 '0.94' '1.83' 347 '0.42' '0.81' 41482 '49.81' '97.35' 9 'F' 'HALBIN' 'Hélène' 'DXG' 507 '0.61' '1.22' 'nan' 5 'F' 'PLANTON' 'Veronique, Raymonde' 'RDG' 2034 '2.44' '4.9' 'nan' 3 'M' 'BOURGOIS' 'Pascal' 'NUP' 9705 '11.65' '23.4' 'nan' 6 'F' 'BERNARD' 'Muriel' 'DVG' 0 '0.0' '0.0' 'nan' '8.0' 'F' 'GUILBERT' 'Amélie' 'ECO' '606.0' '0.73' '1.46' 'nan' '10.0' 'F' 'DEJONG-PAUSS' 'Angélique' 'DIV' '262.0' '0.31' '0.63' 'nan' '2.0' 'M' 'BOUDIÉ' 'Florent' 'ENS' '13565.0' '16.29' '32.7' 'nan' '4.0' 'F' 'FLEURY' 'Catherine' 'DSV' '593.0' '0.71' '1.43' 'nan' '7.0' 'M' 'MALHERBE' 'Gonzague' 'REC' '2582.0' '3.1' '6.22' 'nan' '1.0' 'F' 'CHADOURNE' 'Sandrine' 'RN' '11628.0' '13.96' '28.03' 'nan' 'nan' 'nan' 'nan']"

        excel_format = FormatExcelData2022()

        datas = excel_format.format(excel_line)

        self.assertEqual('33', datas[0])
        self.assertEqual('Gironde', datas[1])
        self.assertEqual('10', datas[2])
        self.assertEqual('10ème circonscription', datas[3])
        self.assertEqual('83277', datas[4])
        self.assertEqual('40667', datas[5])
        self.assertEqual('48.83', datas[6])
        self.assertEqual('42610', datas[7])
        self.assertEqual('51.17', datas[8])
        self.assertEqual('781', datas[9])
        self.assertEqual('0.94', datas[10])
        self.assertEqual('1.83', datas[11])
        self.assertEqual('347', datas[12])
        self.assertEqual('0.42', datas[13])
        self.assertEqual('0.81', datas[14])
        self.assertEqual('41482', datas[15])
        self.assertEqual('49.81', datas[16])
        self.assertEqual('97.35', datas[17])
        self.assertEqual('9', datas[18])
        self.assertEqual('DXG', datas[19])
        self.assertEqual('HALBIN', datas[20])
        self.assertEqual('Hélène', datas[21])
        self.assertEqual('FEMININ', datas[22])
        self.assertEqual('507', datas[23])
        self.assertEqual('0.61%', datas[24])
        self.assertEqual('1.22%', datas[25])
        self.assertEqual('5', datas[26])
        self.assertEqual('RDG', datas[27])
        self.assertEqual('PLANTON', datas[28])
        self.assertEqual('Veronique, Raymonde', datas[29])
        self.assertEqual('FEMININ', datas[30])
        self.assertEqual('2034', datas[31])
        self.assertEqual('2.44%', datas[32])
        self.assertEqual('4.9%', datas[33])
        self.assertEqual('3', datas[34])
        self.assertEqual('NUP', datas[35])        
        self.assertEqual('BOURGOIS', datas[36])
        self.assertEqual('Pascal', datas[37])
        self.assertEqual('MASCULIN', datas[38])
        self.assertEqual('9705', datas[39])
        self.assertEqual('11.65%', datas[40])
        self.assertEqual('23.4%', datas[41])
        self.assertEqual('6', datas[42])
        self.assertEqual('DVG', datas[43])        
        self.assertEqual('BERNARD', datas[44])
        self.assertEqual('Muriel', datas[45])
        self.assertEqual('FEMININ', datas[46])
        self.assertEqual('0', datas[47])
        self.assertEqual('0.0%', datas[48])
        self.assertEqual('0.0%', datas[49])
        self.assertEqual('8.0', datas[50])
        self.assertEqual('ECO', datas[51])        
        self.assertEqual('GUILBERT', datas[52])
        self.assertEqual('Amélie', datas[53])
        self.assertEqual('FEMININ', datas[54])
        self.assertEqual('606.0', datas[55])
        self.assertEqual('0.73%', datas[56])
        self.assertEqual('1.46%', datas[57])
        self.assertEqual('10.0', datas[58])
        self.assertEqual('DIV', datas[59])        
        self.assertEqual('DEJONG-PAUSS', datas[60])
        self.assertEqual('Angélique', datas[61])
        self.assertEqual('FEMININ', datas[62])
        self.assertEqual('262.0', datas[63])
        self.assertEqual('0.31%', datas[64])
        self.assertEqual('0.63%', datas[65])
        self.assertEqual('2.0', datas[66])
        self.assertEqual('ENS', datas[67])        
        self.assertEqual('BOUDIÉ', datas[68])
        self.assertEqual('Florent', datas[69])
        self.assertEqual('MASCULIN', datas[70])
        self.assertEqual('13565.0', datas[71])
        self.assertEqual('16.29%', datas[72])
        self.assertEqual('32.7%', datas[73])
        self.assertEqual('4.0', datas[74])
        self.assertEqual('DSV', datas[75])        
        self.assertEqual('FLEURY', datas[76])
        self.assertEqual('Catherine', datas[77])
        self.assertEqual('FEMININ', datas[78])
        self.assertEqual('593.0', datas[79])
        self.assertEqual('0.71%', datas[80])
        self.assertEqual('1.43%', datas[81])
        self.assertEqual('7.0', datas[82])
        self.assertEqual('REC', datas[83])        
        self.assertEqual('MALHERBE', datas[84])
        self.assertEqual('Gonzague', datas[85])
        self.assertEqual('MASCULIN', datas[86])
        self.assertEqual('2582.0', datas[87])
        self.assertEqual('3.1%', datas[88])
        self.assertEqual('6.22%', datas[89])
        self.assertEqual('1.0', datas[90])
        self.assertEqual('RN', datas[91])        
        self.assertEqual('CHADOURNE', datas[92])
        self.assertEqual('Sandrine', datas[93])
        self.assertEqual('FEMININ', datas[94])
        self.assertEqual('11628.0', datas[95])
        self.assertEqual('13.96%', datas[96])
        self.assertEqual('28.03%', datas[97])

       
    def test_separate_bouches_du_rhones_districts_2022_elections_with_last_name_complet_for_one_candidate(self):
        excel_line = "['13' 'Bouches-du-Rhône' 3 '3ème circonscription' 'Complet' 75982 47766 '62.86' 28216 '37.14' 395 '0.52' '1.4' 135 '0.18' '0.48' 27686 '36.44' '98.12' 11 'F' 'GRANDEL' 'Jacqueline' 'DXG' 289 '0.38' '1.04' 'nan' 3 'M' 'BENSAADA' 'Mohamed' 'NUP' 7678 '10.11' '27.73' 'nan' 2 'F' 'SI AHMED' 'Nadia' 'ECO' 672 '0.88' '2.43' 'nan' 4 'F' 'SAID' 'Elisabeth' 'ECO' 0 '0.0' '0.0' 'nan' '6.0' 'M' 'TORDJMANN' 'Adam' 'ECO' '258.0' '0.34' '0.93' 'nan' '10.0' 'F' 'BELKAROUI' 'Nora' 'REG' '205.0' '0.27' '0.74' 'nan' '7.0' 'F' 'LOUIS' 'Alexandra' 'ENS' '6056.0' '7.97' '21.87' 'nan' '8.0' 'M' 'COCAIGN' 'Bruno' 'DVC' '302.0' '0.4' '1.09' 'nan' '9.0' 'M' 'PAPPALARDO' 'Patrick' 'LR' '995.0' '1.31' '3.59' 'nan' '5.0' 'F' 'D'ANGIO' 'Sandrine' 'REC' '4215.0' '5.55' '15.22' 'nan' '1.0' 'F' 'LELOUIS' 'Gisèle' 'RN' '7016.0' '9.23' '25.34' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan']"

        excel_format = FormatExcelData2022()

        datas = excel_format.format(excel_line)

        self.assertEqual('13', datas[0])
        self.assertEqual('Bouches-du-Rhône', datas[1])
        self.assertEqual('3', datas[2])
        self.assertEqual('3ème circonscription', datas[3])
        self.assertEqual('75982', datas[4])
        self.assertEqual('47766', datas[5])
        self.assertEqual('62.86', datas[6])
        self.assertEqual('28216', datas[7])
        self.assertEqual('37.14', datas[8])
        self.assertEqual('395', datas[9])
        self.assertEqual('0.52', datas[10])
        self.assertEqual('1.4', datas[11])
        self.assertEqual('135', datas[12])
        self.assertEqual('0.18', datas[13])
        self.assertEqual('0.48', datas[14])
        self.assertEqual('27686', datas[15])
        self.assertEqual('36.44', datas[16])
        self.assertEqual('98.12', datas[17])
        self.assertEqual('11', datas[18])
        self.assertEqual('DXG', datas[19])
        self.assertEqual('GRANDEL', datas[20])
        self.assertEqual('Jacqueline', datas[21])
        self.assertEqual('FEMININ', datas[22])
        self.assertEqual('289', datas[23])
        self.assertEqual('0.38%', datas[24])
        self.assertEqual('1.04%', datas[25])
        self.assertEqual('3', datas[26])
        self.assertEqual('NUP', datas[27])
        self.assertEqual('BENSAADA', datas[28])
        self.assertEqual('Mohamed', datas[29])
        self.assertEqual('MASCULIN', datas[30])
        self.assertEqual('7678', datas[31])
        self.assertEqual('10.11%', datas[32])
        self.assertEqual('27.73%', datas[33])
        self.assertEqual('2', datas[34])
        self.assertEqual('ECO', datas[35])        
        self.assertEqual('SI AHMED', datas[36])
        self.assertEqual('Nadia', datas[37])
        self.assertEqual('FEMININ', datas[38])
        self.assertEqual('672', datas[39])
        self.assertEqual('0.88%', datas[40])
        self.assertEqual('2.43%', datas[41])
        self.assertEqual('4', datas[42])
        self.assertEqual('ECO', datas[43])        
        self.assertEqual('SAID', datas[44])
        self.assertEqual('Elisabeth', datas[45])
        self.assertEqual('FEMININ', datas[46])
        self.assertEqual('0', datas[47])
        self.assertEqual('0.0%', datas[48])
        self.assertEqual('0.0%', datas[49])
        self.assertEqual('6.0', datas[50])
        self.assertEqual('ECO', datas[51])        
        self.assertEqual('TORDJMANN', datas[52])
        self.assertEqual('Adam', datas[53])
        self.assertEqual('MASCULIN', datas[54])
        self.assertEqual('258.0', datas[55])
        self.assertEqual('0.34%', datas[56])
        self.assertEqual('0.93%', datas[57])
        self.assertEqual('10.0', datas[58])
        self.assertEqual('REG', datas[59])        
        self.assertEqual('BELKAROUI', datas[60])
        self.assertEqual('Nora', datas[61])
        self.assertEqual('FEMININ', datas[62])
        self.assertEqual('205.0', datas[63])
        self.assertEqual('0.27%', datas[64])
        self.assertEqual('0.74%', datas[65])
        self.assertEqual('7.0', datas[66])
        self.assertEqual('ENS', datas[67])        
        self.assertEqual('LOUIS', datas[68])
        self.assertEqual('Alexandra', datas[69])
        self.assertEqual('FEMININ', datas[70])
        self.assertEqual('6056.0', datas[71])
        self.assertEqual('7.97%', datas[72])
        self.assertEqual('21.87%', datas[73])
        self.assertEqual('8.0', datas[74])
        self.assertEqual('DVC', datas[75])        
        self.assertEqual('COCAIGN', datas[76])
        self.assertEqual('Bruno', datas[77])
        self.assertEqual('MASCULIN', datas[78])
        self.assertEqual('302.0', datas[79])
        self.assertEqual('0.4%', datas[80])
        self.assertEqual('1.09%', datas[81])
        self.assertEqual('9.0', datas[82])
        self.assertEqual('LR', datas[83])        
        self.assertEqual('PAPPALARDO', datas[84])
        self.assertEqual('Patrick', datas[85])
        self.assertEqual('MASCULIN', datas[86])
        self.assertEqual('995.0', datas[87])
        self.assertEqual('1.31%', datas[88])
        self.assertEqual('3.59%', datas[89])
        self.assertEqual('5.0', datas[90])
        self.assertEqual('REC', datas[91])        
        self.assertEqual('D\'ANGIO', datas[92])
        self.assertEqual('Sandrine', datas[93])
        self.assertEqual('FEMININ', datas[94])
        self.assertEqual('4215.0', datas[95])
        self.assertEqual('5.55%', datas[96])
        self.assertEqual('15.22%', datas[97])
        self.assertEqual('1.0', datas[98])
        self.assertEqual('RN', datas[99])        
        self.assertEqual('LELOUIS', datas[100])
        self.assertEqual('Gisèle', datas[101])
        self.assertEqual('FEMININ', datas[102])
        self.assertEqual('7016.0', datas[103])
        self.assertEqual('9.23%', datas[104])
        self.assertEqual('25.34%', datas[105])
        
    def test_separate_mayenne_districts_2022_elections_with_elu_word(self):
        excel_line = "['53' 'Mayenne' 3 '3ème circonscription' 'Complet' 72427 37734 '52.1' 34693 '47.9' 758 '1.05' '2.18' 349 '0.48' '1.01' 33586 '46.37' '96.81' 5 'F' 'AMELIN' 'Martine' 'DXG' 445 '0.61' '1.32' 'nan' 2 'F' 'DETAIS' 'Marion' 'NUP' 6491 '8.96' '19.33' 'nan' 4 'F' 'GARNIER' 'Sonia' 'ECO' 433 '0.6' '1.29' 'nan' 6 'M' 'FAVENNEC' 'Yannick' 'ENS' 19187 '26.49' '57.13' 'Elu' '7.0' 'F' 'CHARTIER' 'Claudine' 'DSV' '535.0' '0.74' '1.59' 'nan' '1.0' 'F' 'DE GRANDMAISON' 'Amélie' 'REC' '1160.0' '1.6' '3.45' 'nan' '3.0' 'F' 'BELL' 'Annie' 'RN' '5335.0' '7.37' '15.88' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan' 'nan']"
        excel_format = FormatExcelData2022()

        datas = excel_format.format(excel_line)

        self.assertEqual('53', datas[0])
        self.assertEqual('Mayenne', datas[1])
        self.assertEqual('3', datas[2])
        self.assertEqual('3ème circonscription', datas[3])
        self.assertEqual('72427', datas[4])
        self.assertEqual('37734', datas[5])
        self.assertEqual('52.1', datas[6])
        self.assertEqual('34693', datas[7])
        self.assertEqual('47.9', datas[8])
        self.assertEqual('758', datas[9])
        self.assertEqual('1.05', datas[10])
        self.assertEqual('2.18', datas[11])
        self.assertEqual('349', datas[12])
        self.assertEqual('0.48', datas[13])
        self.assertEqual('1.01', datas[14])
        self.assertEqual('33586', datas[15])
        self.assertEqual('46.37', datas[16])
        self.assertEqual('96.81', datas[17])
        self.assertEqual('5', datas[18])
        self.assertEqual('DXG', datas[19])
        self.assertEqual('AMELIN', datas[20])
        self.assertEqual('Martine', datas[21])
        self.assertEqual('FEMININ', datas[22])
        self.assertEqual('445', datas[23])
        self.assertEqual('0.61%', datas[24])
        self.assertEqual('1.32%', datas[25])
        self.assertEqual('2', datas[26])
        self.assertEqual('NUP', datas[27])
        self.assertEqual('DETAIS', datas[28])
        self.assertEqual('Marion', datas[29])
        self.assertEqual('FEMININ', datas[30])
        self.assertEqual('6491', datas[31])
        self.assertEqual('8.96%', datas[32])
        self.assertEqual('19.33%', datas[33])
        self.assertEqual('4', datas[34])
        self.assertEqual('ECO', datas[35])        
        self.assertEqual('GARNIER', datas[36])
        self.assertEqual('Sonia', datas[37])
        self.assertEqual('FEMININ', datas[38])
        self.assertEqual('433', datas[39])
        self.assertEqual('0.6%', datas[40])
        self.assertEqual('1.29%', datas[41])
        self.assertEqual('6', datas[42])
        self.assertEqual('ENS', datas[43])        
        self.assertEqual('FAVENNEC', datas[44])
        self.assertEqual('Yannick', datas[45])
        self.assertEqual('MASCULIN', datas[46])
        self.assertEqual('19187', datas[47])
        self.assertEqual('26.49%', datas[48])
        self.assertEqual('57.13%', datas[49])
        self.assertEqual('7.0', datas[50])
        self.assertEqual('DSV', datas[51])        
        self.assertEqual('CHARTIER', datas[52])
        self.assertEqual('Claudine', datas[53])
        self.assertEqual('FEMININ', datas[54])
        self.assertEqual('535.0', datas[55])
        self.assertEqual('0.74%', datas[56])
        self.assertEqual('1.59%', datas[57])
        self.assertEqual('1.0', datas[58])
        self.assertEqual('REC', datas[59])        
        self.assertEqual('DE GRANDMAISON', datas[60])
        self.assertEqual('Amélie', datas[61])
        self.assertEqual('FEMININ', datas[62])
        self.assertEqual('1160.0', datas[63])
        self.assertEqual('1.6%', datas[64])
        self.assertEqual('3.45%', datas[65])
        self.assertEqual('3.0', datas[66])
        self.assertEqual('RN', datas[67])        
        self.assertEqual('BELL', datas[68])
        self.assertEqual('Annie', datas[69])
        self.assertEqual('FEMININ', datas[70])
        self.assertEqual('5335.0', datas[71])
        self.assertEqual('7.37%', datas[72])
        self.assertEqual('15.88%', datas[73])
        
        